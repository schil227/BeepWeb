# Output Configurations
#
# Use: Configures what endpoints a pin is hooked up to.
#
# Format: <enabled>|<pin_code>|<configuration_name>|<base_url>|<request_type>|<response_type>|<response_property>|<response_positive_value>|<fail_on_bad_response>|<username>|<password>|<csv_inserts>
#
#	enabled: Whether or not the configuration is enabled. 
#			values: true, false
#
#	pin_code: The Pi pin which will send out the signal. Must be unique for each entry
#			values: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
#
#	base_url: The url which will supply the response to determine the pin value. By using {$} in the url, each of the csv_inserts will be used to create a new url.
#				e.g. base_url = http://devbuild/{$}/builds/,
#					 csv_inserts = 1,2,3
#						=> [http://devbuild/1/builds/, http://devbuild/2/builds/, http://devbuild/3/builds/]
#							If all three above values return successfully, then the output is success.
#
#	request_type: The format of the outgoing request
#			values: GET, TEAMCITY
#
#	response_type: The format of the response from the base_url.
#			values: XML, JSON
#
#	response_property: The property in the response to check for success against - this value depends on the response type; e.g. for XML, it is the xpath
#				e.g. When the response is XML, XPath //build[@status='SUCCESS'] <build id="76712" status="SUCCESS" state="finished" branchName="dev" >
#
#	response_positive_value: (case insensitive) The value that the property must be for it to be a success - optional depending on the response type
#				e.g. "success" would be the positive value for response <build id="76712" status="SUCCESS" state="finished" branchName="dev" >
#
#	fail_on_bad_response: Whether or not to fail in the event that a response has a bad status code
#				values: true, false
#
#	username: if the request requires authentication, enter the corresponding key of the username in the config.properties file
#				values: none, <the username field key>
#
#	password: if the request requires authentication, enter the corresponding key of the password in the config.properties file
#				values: none, <the password field key>
#
#	csv_inserts: a comma separated list of values that will be inserted in the base_url. If all requests are successful, the result is a success.
#				e.g. apple, banana, orange


# Aero Platform Build Status - Pin 1
true|1|Aero Platform Build Status|http://devbuild/app/rest/buildTypes/id:{$}/builds/?count=1|TEAMCITY|XML|//build[@status='SUCCESS']|N/A|1|teamCityUsername|teamCityPassword|AeroPlatform_ApiGateway_Dev_VerifyChanges,AeroPlatform_Aero_Dev_VerifyChanges,AeroPlatform_BranchService_Dev_VerifyChanges,AeroPlatform_Commons_Dev_VerifyChanges,AeroPlatform_CompanyService_Dev_VerifyChanges,AeroPlatform_ConfigurationService_Dev_VerifyChanges,AeroPlatform_DocumentExportService_Dev_VerifyChanges,AeroPlatform_DocumentService_Dev_VerifyChanges,AeroPlatform_EVerifyService_Dev_VerifyChanges,AeroPlatform_EmployerService_Dev_VerifyChanges,AeroPlatform_Identity_Dev_VerifyChanges,AeroPlatform_JobPublication_Dev_VerifyChanges,AeroPlatform_LinkForwarder_Dev_VerifyChanges,AeroPlatform_PasscodeService_Dev_VerifyChanges,AeroPlatform_QualityUtilities_Dev_VerifyChanges,AeroPlatform_RecommendationService_Dev_VerifyChanges,AeroPlatform_ResumeProcessorService_Dev_VerifyChanges,AeroPlatform_SearchService_Dev_VerifyChanges,AeroPlatform_TalentService_Dev_VerifyChanges,AeroPlatform_TalentTaskService_Dev_VerifyChanges,AeroPlatform_TenantService_Dev_VerifyChanges,AeroPlatform_TestCommunicator_Dev_VerifyChanges,AeroPlatform_UserService_Dev_VerifyChanges,AeroPlatform_EDocumentService_Dev_VerifyChanges,AeroPlatform_OrderService_Dev_VerifyChanges,AeroPlatform_PartnerIntegrationService_Dev_VerifyChanges

#Suite Platform Build Status - Pin 2
true|2|Suite Build Status|http://devbuild/app/rest/buildTypes/id:Avionte_Suite_Release_Dev_VerifyBuild/builds/?count=1|TEAMCITY|XML|//build[@status='SUCCESS']|N/A|1|teamCityUsername|teamCityPassword|